package mkl.testarea.itext5.content;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Collections;
import java.util.List;

import org.junit.BeforeClass;
import org.junit.Test;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;

/**
 * @author mkl
 */
public class UnwantedPage
{
    final static File RESULT_FOLDER = new File("target/test-outputs", "content");

    @BeforeClass
    public static void setUpBeforeClass() throws Exception
    {
        RESULT_FOLDER.mkdirs();
    }

    /**
     * <a href="http://stackoverflow.com/questions/35062472/blank-pdf-page-is-created-when-im-using-itext-in-android">
     * blank pdf page is created when im using itext in android
     * </a>
     * <p>
     * This is the burnt down code of the OP. In contrast to his claims there is no unwanted page to be seen. 
     * </p>
     */
    @Test
    public void testYasirAhmedKhanOriginal() throws IOException, DocumentException
    {
        List<String> listofimage = Collections.nCopies(3, "src/test/resources/mkl/testarea/itext5/layer/Willi-1.jpg");
//                Collections.singletonList("src/test/resources/mkl/testarea/itext5/layer/Willi-1.jpg");
        File file = new File(RESULT_FOLDER, "YasirAhmedKhanOriginal.pdf");

        Document document = new Document();
        PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(file));
        writer.setPageEvent(new PdfPageEventHelper()
        {
            public void onEndPage(PdfWriter writer, Document document)
            {
                ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Generated by Snap Scanner Powered By Genetech Solutions"), 180, 30, 0);
                ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("page " + document.getPageNumber()), 550, 30, 0);
            }
        });
        document.open();

        for (int i = 0; i < listofimage.size(); i++)
        {
            String imgFileName = listofimage.get(i).toString();
            Image image = Image.getInstance(imgFileName);

            float scaler = ((document.getPageSize().getWidth() - document.leftMargin() - document.rightMargin()) /
                    image.getWidth()) * 90;
            image.scalePercent(scaler);

            document.newPage();
            document.add(image);
            document.addAuthor("Genetech Solutions");
        }

        document.close();
    }
}
